openapi: "3.0.1"
info:
  title: "NVA Publication Channels"
  description: "The NVA Publication Channels API.\n\n  This API provides a facade\
    \ that allows dereferencing of individual pubulication channels in [NSD DBH](https://kanalregister.hkdir.no/publiseringskanaler/Forside).\n\
    \n  The data is reformatted as JSON-LD with a schema defined in the [search ontology](https://bibsysdev.github.io/src/search-ontology.ttl)\
    \ and the [publication channel ontology](https://bibsysdev.github.io/src/publication-channel-ontology.ttl).\n\
    \n  To understand the semantic layer, take a look at the @context URI returned\
    \ by the API, the data is marked up according to this and may be interpreted directly\
    \ to RDF using this.\n"
  version: "1.0.0"
servers:
- url: "https://api.sandbox.nva.aws.unit.no/{basePath}"
  variables:
    basePath:
      default: "/publication-channels"
paths:
  /journal:
    get:
      operationId: "getJournalsByQuery"
      parameters:
      - name: "year"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "query"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journal"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Journal"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "500 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "405":
          description: "405 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "504":
          description: "504 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "406":
          description: "406 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /journal/{id}/{year}:
    get:
      operationId: "GetJournalById"
      parameters:
      - name: "year"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Journal"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Journal"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "500 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "405":
          description: "405 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "504":
          description: "504 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "406":
          description: "406 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "year"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /publisher/{id}/{year}:
    get:
      operationId: "getPublisherById"
      parameters:
      - name: "year"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Publisher"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "500 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "405":
          description: "405 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "504":
          description: "504 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "406":
          description: "406 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "year"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "id"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /publisher:
    get:
      operationId: "getPublisherByQuery"
      parameters:
      - name: "year"
        in: "query"
        required: true
        schema:
          type: "string"
      - name: "query"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Publisher"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Publisher"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "500":
          description: "500 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "405":
          description: "405 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "504":
          description: "504 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "406":
          description: "406 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    Context:
      pattern: "https:\\/\\/.*$"
      type: "string"
      description: "The JSON-LD context object for the data, which describes the object\
        \ in the data and allows machine processing of the data at a semantic level"
    ScientificValue:
      type: "string"
      description: "The NPI level of the journal, either null, LEVEL_0, LEVEL_1, LEVEL_2"
      enum:
      - "LEVEL_0"
      - "LEVEL_1"
      - "LEVEL_2"
    Active:
      type: "boolean"
      description: "The activity status of the Publisher; true if it is currently\
        \ publishing content, false if it has ceased publishing"
    Identifier:
      pattern: "^[0-9]+$"
      type: "string"
      description: "The NSD DBH persistent identifier of the publication channel"
    Webpage:
      pattern: "^http(s)?:\\/\\/.*$"
      type: "string"
      description: "The URI for the homepage of the publication channel"
    Journal:
      type: "object"
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
        active:
          $ref: "#/components/schemas/Active"
        language:
          pattern: "^http:\\/\\/lexvo.org\\/id\\/iso639-3\\/[a-z]{3}$"
          type: "string"
          description: "The lexvo URI for the language of the Journal"
        type:
          pattern: "Journal"
          type: "string"
          description: "The type of the returned object, always Journal"
        '@context':
          $ref: "#/components/schemas/Context"
        scientificValue:
          $ref: "#/components/schemas/ScientificValue"
        issn:
          pattern: "^[0-9]{4}-[0-9]{4}$"
          type: "string"
          description: "The ISSN of the print edition of the Journal"
        eIssn:
          pattern: "^[0-9]{4}-[0-9]{4}$"
          type: "string"
          description: "The ISSN of the online edition of the Journal"
        name:
          $ref: "#/components/schemas/Name"
        publisher:
          pattern: "^http(s)?:\\/\\/example.org/publisher/[0-9]+$"
          type: "string"
          description: "The URI for the publisher of the Journal in NSD DBH"
        npiDomain:
          pattern: "^http(s)?:\\/\\/example.org/npi-domain/[0-9]+$"
          type: "string"
          description: "The URI of the NPI academic domain (e.g. computer science,\
            \ biology) that the Journal covers."
        webpage:
          $ref: "#/components/schemas/Webpage"
        id:
          pattern: "^https:\\/\\/example.org/journal/[0-9]+$"
          type: "string"
          description: "The URI of the object"
    Problem:
      type: "object"
      properties:
        instance:
          type: "string"
          description: "The requested path associated with the error"
        detail:
          type: "string"
          description: "A more detailed error message describing the error and potential\
            \ mitigations"
        type:
          type: "string"
          description: "A URI describing the error and mitigations, in generic cases,\
            \ this is about:blank"
        title:
          type: "string"
          description: "Human-readable description of the error status"
        status:
          type: "integer"
          description: "The HTTP status code associated with the problem"
          format: "int32"
    Publisher:
      type: "object"
      properties:
        identifier:
          $ref: "#/components/schemas/Identifier"
        name:
          $ref: "#/components/schemas/Name"
        active:
          $ref: "#/components/schemas/Active"
        webpage:
          $ref: "#/components/schemas/Webpage"
        id:
          type: "string"
          description: "The URI of the object"
        isbnPrefixes:
          type: "array"
          items:
            type: "string"
            description: "The ISBN prefix ((EAN)-group-publisher) portions of ISBNs\
              \ associatied with the Publisher"
        type:
          pattern: "^Publisher$"
          type: "string"
          description: "The type of the returned object"
        '@context':
          $ref: "#/components/schemas/Context"
        scientificValue:
          $ref: "#/components/schemas/ScientificValue"
    Name:
      type: "string"
      description: "The name of the publication channel"
