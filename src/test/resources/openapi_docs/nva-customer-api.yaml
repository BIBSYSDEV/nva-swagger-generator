openapi: "3.0.1"
info:
  title: "NVA Customer API"
  description: "The customer data API for NVA returns data about NVA participant institutions.\
    \ The API has restricted access although no sensitive data is contained within.\n"
  version: "1.0"
servers:
- url: "https://api.sandbox.nva.aws.unit.no/{basePath}"
  variables:
    basePath:
      default: "/customer"
paths:
  /{identifier}/vocabularies:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VocabularyList"
          application/ld+json:
            schema:
              $ref: "#/components/schemas/VocabularyList"
        required: true
      responses:
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VocabularyList"
          application/ld+json:
            schema:
              $ref: "#/components/schemas/VocabularyList"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/VocabularyList"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /orgDomain/{orgDomain}:
    get:
      parameters:
      - name: "orgDomain"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerIdentifiers"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/CustomerIdentifiers"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "orgDomain"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /{identifier}:
    get:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    put:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Customer"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "identifier"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /cristinId/{cristinId}:
    get:
      parameters:
      - name: "cristinId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Customer"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      parameters:
      - name: "cristinId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /:
    get:
      responses:
        "404":
          description: "404 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomerList"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/CustomerList"
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Customer"
          application/ld+json:
            schema:
              $ref: "#/components/schemas/Customer"
        required: true
      responses:
        "400":
          description: "400 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
        "201":
          description: "201 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Customer"
            application/ld+json:
              schema:
                $ref: "#/components/schemas/Customer"
        "502":
          description: "502 response"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    Vocabulary:
      type: "object"
      properties:
        name:
          type: "string"
        id:
          type: "string"
          format: "uri"
        type:
          type: "string"
          enum:
          - "Vocabulary"
        status:
          type: "string"
          enum:
          - "disabled"
          - "enabled"
          - "default"
    Customer:
      type: "object"
      properties:
        vocabularies:
          type: "array"
          items:
            $ref: "#/components/schemas/Vocabulary"
        identifier:
          $ref: "#/components/schemas/CustomerIdentifier"
        archiveName:
          type: "string"
        displayName:
          type: "string"
        cristinId:
          type: "string"
          format: "uri"
        cname:
          type: "string"
        type:
          type: "string"
        '@context':
          type: "object"
        createdDate:
          type: "string"
          format: "date-time"
        feideOrganizationId:
          type: "string"
        name:
          type: "string"
        modifiedDate:
          type: "string"
          format: "date-time"
        publicationWorkflow:
          type: "string"
          enum:
          - "RegistratorPublishesMetadataOnly"
          - "RegistratorPublishesMetadataAndFiles"
          - "RegistratorRequiresApprovalForMetadataAndFiles"
        id:
          type: "string"
          format: "uri"
        shortName:
          type: "string"
        institutionDns:
          type: "string"
    VocabularyList:
      type: "object"
      properties:
        vocabularies:
          type: "array"
          items:
            $ref: "#/components/schemas/Vocabulary"
        id:
          type: "string"
          format: "uri"
        type:
          type: "string"
          enum:
          - "VocabularyList"
    CustomerIdentifier:
      maximum: 1
      minimum: 1
      type: "string"
      format: "uuid"
    Problem:
      type: "object"
      properties:
        instance:
          type: "string"
          description: "The requested path associated with the error"
          format: "uri"
        detail:
          type: "string"
          description: "A more detailed error message describing the error and potential\
            \ mitigations"
        type:
          type: "string"
          description: "A URI describing the error and mitigations, in generic cases,\
            \ this is about:blank"
          format: "uri"
        title:
          type: "string"
          description: "Human-readable description of the error status"
        status:
          type: "integer"
          description: "The HTTP status code associated with the problem"
          format: "int32"
    CustomerIdentifiers:
      type: "object"
      properties:
        identifier:
          type: "string"
          format: "uri"
        cristinId:
          type: "string"
          format: "uri"
    CustomerList:
      type: "object"
      properties:
        customers:
          type: "array"
          items:
            $ref: "#/components/schemas/Customer"
        id:
          type: "string"
          format: "uri"
        type:
          type: "string"
        '@context':
          type: "string"
          format: "uri"
