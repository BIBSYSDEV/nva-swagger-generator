openapi: "3.0.1"
info:
  title: "NVA Roles and Users catalogue"
  description: "Api for updating users and roles"
  version: "1.0.0"
servers:
- url: "https://api.sandbox.nva.aws.unit.no/{basePath}"
  variables:
    basePath:
      default: "/users-roles"
paths:
  /roles:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Role"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /login:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerSelection"
        required: true
      responses:
        "200":
          description: "200 response"
          content: {}
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /users:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /roles/{role}:
    get:
      parameters:
      - name: "role"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      parameters:
      - name: "role"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /institutions/users:
    get:
      parameters:
      - name: "institution"
        in: "query"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ArrayOfUser"
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /users/{username}:
    get:
      parameters:
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    put:
      parameters:
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "202":
          description: "202 response"
          headers:
            Location:
              schema:
                type: "string"
          content: {}
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      parameters:
      - name: "username"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /userinfo:
    get:
      responses:
        "200":
          description: "200 response"
          content: {}
      security:
      - CognitoAuthorizer:
        - "https://api.nva.unit.no/scopes/backend"
        - "https://api.nva.unit.no/scopes/frontend"
        - "aws.cognito.signin.user.admin"
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    Role:
      type: "object"
      properties:
        accessRight:
          type: "array"
          items:
            $ref: "#/components/schemas/AccessRight"
        rolename:
          type: "string"
        type:
          type: "string"
    CustomerSelection:
      type: "object"
      properties:
        customerId:
          type: "string"
          format: "uri"
        type:
          type: "string"
          default: "CustomerSelection"
    User:
      type: "object"
      properties:
        institution:
          type: "string"
        accessRight:
          type: "array"
          items:
            $ref: "#/components/schemas/AccessRight"
        viewingScope:
          $ref: "#/components/schemas/ViewingScope"
        roles:
          type: "array"
          items:
            $ref: "#/components/schemas/Role"
        familyName:
          type: "string"
        givenName:
          type: "string"
        type:
          type: "string"
        username:
          type: "string"
    ViewingScope:
      type: "object"
      properties:
        includedUnits:
          type: "array"
          items:
            type: "string"
            format: "uri"
    ArrayOfUser:
      type: "array"
      items:
        $ref: "#/components/schemas/User"
    AccessRight:
      type: "string"
      enum:
      - "APPROVE_DOI_REQUEST"
      - "REJECT_DOI_REQUEST"
  securitySchemes:
    CognitoAuthorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
